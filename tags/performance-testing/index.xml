<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance testing on A Technology Journal</title><link>http://danvalencia.github.io/tags/performance-testing/</link><description>Recent content in performance testing on A Technology Journal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Oct 2012 10:50:03 -0700</lastBuildDate><atom:link href="http://danvalencia.github.io/tags/performance-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>A Performance Testing Methodology</title><link>http://danvalencia.github.io/articles/a_performance_testing_methodology/</link><pubDate>Mon, 29 Oct 2012 10:50:03 -0700</pubDate><guid>http://danvalencia.github.io/articles/a_performance_testing_methodology/</guid><description>The primary goal of any web site performance testing and capacity planning activity is to know how many users can our system handle under acceptable response times given certain hardware specifications. We can get this information by graphing a concurrency vs response time graph.
A typical graph looks like this:
Note how the curve grows exponentially. Depending on the nature of the website (or web pages) under test you might have different acceptable response times.</description></item></channel></rss>